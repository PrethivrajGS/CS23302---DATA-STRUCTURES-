#include<stdio.h>
#include<stdlib.h>
typedef struct node
{
    int data;
    struct node* next;
}n;
n* create(int data)
{
    n* newnode= (n*)malloc(sizeof(n));
    newnode->next= NULL;
    newnode->data=data;
    return newnode;
}
void insertbegin(n** head,int data)
{
    n* newnode= create(data);
    newnode->next= *head;
    *head= newnode;
}
void insertend(n** head,int data)
{
    n* newnode=create(data);
    if(*head==NULL)
    {
     *head=newnode;
     return;
    }
    n* temp= *head;
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    temp->next=newnode;
}
void insertposition(n** head,int data,int pos)
{
      n* newnode=create(data);
    int i;
    if(pos==0)
    {
        insertbegin(head,data);
    }
    n* temp = *head;
    for(i=0;temp!=NULL&& i<pos-1;i++)
    {
        temp=temp->next;
    }
 if(temp==NULL)
 {
     printf("out of index:");
     free(newnode);
     return;
 }
    newnode->next= temp->next;
    temp->next=newnode;
}
void print(n* head)
{
    n* temp=head;
    while(temp!=NULL)
    {
        printf("%d->",temp->data);
        temp=temp->next;
    }
    printf("\n");
}
int main()
{
  n* head=NULL;
  insertbegin(&head,10);
  printf("after inserting:");
  print(head);
  insertbegin(&head,90);
  printf("afetr inserting:");
 // printf("%d",head->data);
  print(head);
  insertposition(&head,89,2);
  insertend(&head,35);
  printf("afetr inserting:");
  print(head);
}